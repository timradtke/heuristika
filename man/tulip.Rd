% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tulip.R
\name{tulip}
\alias{tulip}
\title{Fit a robust exponential smoothing model via grid search}
\usage{
tulip(
  y,
  m,
  family = c("auto", "norm", "student", "cauchy")[1],
  param_grid = NULL,
  priors = NULL,
  init_states = NULL,
  seasonality_threshold = 0.5,
  remove_anomalies = TRUE,
  anomaly_budget = 5,
  anomaly_budget_most_recent_k = 1,
  min_obs_anomaly_removal = 12
)
}
\arguments{
\item{y}{A time series as numeric vector, may include NAs for some of the
observations}

\item{m}{The time series' period length in number of observations (e.g., 12
for yearly seasonality with monthly observations, 1 for no seasonality, ...
); does not handle multiple seasonality (e.g. weekly and yearly for daily
observations)}

\item{family}{The distribution used to describe the error component; must be
one of \code{auto} (default), \code{norm}, \code{student}, or \code{cauchy}.}

\item{param_grid}{Matrix defining the grid of parameters to be trialled
during grid search optimization; default parameter grid will be used if
left \code{NULL}. Can be created using \code{\link[=initialize_param_grid]{initialize_param_grid()}}.}

\item{priors}{List of priors on the models parameters; default priors will be
used if left NULL. Can be created using \code{\link[=add_prior_error]{add_prior_error()}},
\code{\link[=add_prior_level]{add_prior_level()}}, \code{\link[=add_prior_seasonality]{add_prior_seasonality()}}, \code{\link[=add_prior_trend]{add_prior_trend()}},
\code{\link[=add_prior_anomaly]{add_prior_anomaly()}}}

\item{init_states}{List of initial states \code{l}, \code{b}, and \code{s} used to start
iterative smoothing of the time series for each set of the parameters in
the parameter grid. Default initialization via \code{\link[=initialize_states]{initialize_states()}} will
be used if left \code{NULL}.}

\item{remove_anomalies}{Logical; during fitting, anomalies can be identified
and interpolated to not adversely affect the fitted states. The
interpolated values are only used to fit the states. When it comes to
estimating the error's standard deviation \code{sigma} and to measuring the
likelihood, interpolated values (i.e., fitted values) are compared against
the original "anomalies" so that robust distributions like Cauchy and
Student are correctly attributed a higher likelihood than the Normal
distribution and may be chosen to project the uncertainty due to anomalies
into the future. Default is \code{TRUE}.}

\item{anomaly_budget}{Integerish (default 5); the number of anomalies that
can be interpolated during fitting of state components. It can be useful to
set a somewhat low hard limit on the number of possible interpolations as
some parameter grid combinations may be misspecified compared to the
"correct" data generating process and would therefore consider every
observation an anomaly.}

\item{anomaly_budget_most_recent_k}{Integerish (default 1); additional budget
reserved to remove anomalies from the \code{k} most recent observations only.
Especially models with larger \code{alpha} and \code{beta} smoothing parameters
adjust the forecast strongly to the most recent observation(s). But even if
the smoothing parameters are small, an anomalous most recent observation(s)
can have a large impact on the forecast if it is sufficiently large (or
small). At the same time, it can be undesired that the forecast adjusts
heavily to the one, two, or k most recent observations even if they are
very different from the rest of the series. For a discussion of this, see
also: Michael Bohlke-Schneider, Shubham Kapoor, Tim Januschowski (2020).
\emph{Resilient Neural Forecasting Systems}.
\url{https://www.amazon.science/publications/resilient-neural-forecasting-systems}}

\item{min_obs_anomaly_removal}{Integerish (default 12); the anomaly detection
relies on the fitted values' errors' standard deviation. The standard
deviation is iteratively updated as the state components are fitted from
the first observation to the last observation. This parameter defines after
which observation of the time series there are sufficiently many
observations available to reliably estimate the error's standard deviation
and thus determine whether an observation should be considered an anomaly.
The default of 12 is useful for monthly observations and not too low. But
it also implies that any anomaly in the first 12 observations will have
an impact on the estimated state components.}
}
\value{
An object of class \code{tulip}, a list with components:
\describe{
\item{y_hat}{Fitted values}
\item{y}{Input time series}
\item{x_hat}{Fitted values on standardized scale}
\item{x}{Input time series on standardized scale}
}
}
\description{
Fit a robust exponential smoothing model via grid search
}
\examples{
set.seed(4278)
y <- rt(100, df = 10) * 10 + 1:100

ls_fit <- tulip(y = y, m = 12, family = "norm")

print(ls_fit$family)
print(ls_fit$param_grid)

plot(y, type = "l", col = "grey", xlab = NA)
points(y, pch = 21, bg = "black", col = "white")

# add fitted values
lines(ls_fit$y_hat, col = "blue")

# add actuals with interpolated anomalies
points(ls_fit$x_cleaned * ls_fit$y_mad + ls_fit$y_median,
       col = "orange", pch = 21)

}
\seealso{
\code{\link[=draw_paths]{draw_paths()}}, \code{\link[=initialize_states]{initialize_states()}}, \code{\link[=initialize_param_grid]{initialize_param_grid()}},
\code{\link[=add_prior_level]{add_prior_level()}}, \code{\link[=add_prior_trend]{add_prior_trend()}}, \code{\link[=add_prior_seasonality]{add_prior_seasonality()}},
\code{\link[=add_prior_error]{add_prior_error()}}, \code{\link[=add_prior_anomaly]{add_prior_anomaly()}}
}
